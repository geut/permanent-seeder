#!/usr/bin/env node

const { SDK } = require('@geut/permanent-seeder-sdk')

const { MESSAGE_KEY_ADD, MESSAGE_SEEDER_UNSEED, MESSAGE_KEY_FETCH } = require('./constants')

let sdk

const seederDaemon = async () => {
  const config = JSON.parse(process.argv[2])

  sdk = new SDK(config)

  sdk.on('ready', () => process.send('ready'))

  await sdk.start()
}

const messageHandlers = {
  [MESSAGE_KEY_ADD]: handleAddKeyMessage,
  [MESSAGE_KEY_FETCH]: handleFetchKeysMessage,
  [MESSAGE_SEEDER_UNSEED]: handleUnseedMessage
}

async function handleAddKeyMessage (packet) {
  await sdk.addKey(packet.data)
}

async function handleFetchKeysMessage (packet) {
  await sdk.fetchKeys(packet.data)
}

async function handleUnseedMessage (packet) {
  await sdk.unseed(packet.data)
}

async function handleMessage (packet) {
  if (!messageHandlers[packet.topic]) return

  await messageHandlers[packet.topic](packet)
}

process.on('message', handleMessage)

process.on('exit', function () {
  process.off('message', handleMessage)
})

process.on('SIGINT', async function () {
  sdk.once('stopped', () => process.exit(0))
  await sdk.stop()
})

seederDaemon().catch(error => {
  console.error(error)
  process.exit(1)
})
